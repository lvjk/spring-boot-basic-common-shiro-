<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.citic.modules.sys.dao.UserDao">
	
    <sql id="userColumns">
    		a.user_id as id,
			a.office_name, 
			a.login_name, 
			a.user_name as name , 
			a.user_pwd as password, 
			a.`no`, 
			a.email,
			a.phone, 
			a.user_role as userType, 
			a.create_user , 
			a.create_time as createTime,
			a.create_time as updateTime,
			a.del_flag
    </sql>
    
    <sql id="userJoins">
	
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		 SELECT 
				<include refid="userColumns"/>
		FROM sys_user as a
		WHERE a.user_id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		 SELECT 
			<include refid="userColumns"/>
		FROM sys_user as a
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		 SELECT 
			<include refid="userColumns"/>
		FROM sys_user as a
		 
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		 
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		 
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_time desc
			</otherwise>
		</choose>
	</select>

	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		 SELECT 
		 
				<include refid="userColumns"/>
		FROM sys_user as a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.create_time desc
	</select>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id" parameterType="User">
		INSERT INTO sys_user(
		 
					office_name, 
					login_name, 
					user_name, 
					user_pwd, 
					`no`, 
					email, 
					phone, 
					user_role, 
					create_user, 
					create_time, 
					del_flag
		) VALUES (
			 
			#{officeName}, 
			#{loginName}, 
			#{name}, 
			#{password}, 
			#{no}, 
			#{email}, 
			#{phone}, 
			#{userType}, 
			#{createBy.name}, 
			#{createTime}, 	 
			#{delFlag}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET 
			office_name = #{officeName}, 
			login_name = #{loginName}, 
			<if test="password != null and password != '' ">
				password = #{password}, 
			</if>  
			no = #{no}, 
			name = #{name}, 
			email = #{email}, 
			phone = #{phone}, 
			user_role = #{userType}
		WHERE user_id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>
	
	 
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET 
			name = #{name},
			email = #{email}, 
			phone = #{phone}, 
		WHERE user_id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE user_id = #{id}
	</update>
	 
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user 
		WHERE user_id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE user_id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} = '${value}'
	</select>
	 
	
</mapper>